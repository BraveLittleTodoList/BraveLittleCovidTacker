{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/Chart/Chart.module.css","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","a","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","country","name","Chart","useState","setDailyData","useEffect","initialDailyData","fetchMyAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","Countries","handleCountryChange","setCountries","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","this","setState","CountryPicker","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.190ca861.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3Hg_4\",\"card\":\"Cards_card__2DRkb\",\"infected\":\"Cards_infected__2ElfL\",\"recovered\":\"Cards_recovered__3mcSE\",\"deaths\":\"Cards_deaths__1pjxr\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport styles from './Cards.module.css';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames'\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate}}) => {\r\n    \r\n    if(!confirmed){\r\n        return 'Loading ...';\r\n    }\r\n\r\n    return (\r\n       <div className={styles.container}>\r\n           <Grid container spacing={3} justify=\"center\">\r\n               <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                   <CardContent>\r\n                       <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                       \r\n                       <Typography variant=\"h5\">\r\n                           <CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\"/>\r\n                        </Typography>\r\n                       \r\n                       <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                       <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n                   </CardContent>\r\n               </Grid>\r\n               <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                   <CardContent>\r\n                       <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                       \r\n                       <Typography variant=\"h5\">\r\n                           <CountUp start={0} end={recovered.value} duration={2.5} separator=\",\"/>\r\n                        </Typography>\r\n                       \r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                       <Typography variant=\"body2\">Number of recoveries from COVID-19</Typography>\r\n                   </CardContent>\r\n               </Grid>\r\n               <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                   <CardContent>\r\n                       <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                       \r\n                       <Typography variant=\"h5\">\r\n                           <CountUp start={0} end={deaths.value} duration={2.5} separator=\",\"/>\r\n                        </Typography>\r\n                       \r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                       <Typography variant=\"body2\">Number of deaths caused by COVID-19</Typography>\r\n                   </CardContent>\r\n               </Grid>\r\n           </Grid>\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async () => {\r\n    try {\r\n        const { data: {confirmed, recovered, deaths, lastUpdate} } = await axios.get(url);\r\n        \r\n        return { confirmed, recovered, deaths, lastUpdate};\r\n        \r\n    } catch (error){\r\n\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const { data } = await axios.get(`${url}/daily`);\r\n        \r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate\r\n        }));\r\n\r\n      return modifiedData;\r\n    } catch (error) {\r\n        \r\n    }\r\n} \r\n\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n      const { data: { countries } } = await axios.get(`${url}/countries`);\r\n  \r\n      return countries.map((country) => country.name);\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  };","import React, { useState, useEffect } from 'react';\r\nimport {fetchDailyData } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\nimport styles from './Chart.module.css'\r\n\r\nconst Chart = () => {\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchMyAPI = async () => {\r\n          const initialDailyData = await fetchDailyData();\r\n    \r\n          setDailyData(initialDailyData);\r\n        };\r\n    \r\n        fetchMyAPI();\r\n      }, []);\r\n\r\n  const lineChart = (\r\n      dailyData.length \r\n        ? ( <Line \r\n            data={{\r\n                labels: dailyData.map (({ date }) => date),\r\n                datasets: [{\r\n                    data: dailyData.map (({ confirmed }) => confirmed),\r\n                    label: 'Infected',\r\n                    borderColor: '#3333ff',\r\n                    fill: true,\r\n                }, {\r\n                    data: dailyData.map (({ deaths }) => deaths),\r\n                    label: 'Infected',\r\n                    borderColor: 'red',\r\n                    backgroundColor: 'rgba(255, 0, 0, 0.5',\r\n                    fill: true,\r\n                }],\r\n            }}\r\n        />) : null\r\n  );\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nimport { fetchCountries } from '../../api';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nconst Countries = ({ handleCountryChange }) => {\r\n  const [countries, setCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setCountries(await fetchCountries());\r\n    };\r\n\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n        <option value=\"\">Global</option>\r\n        {countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default Countries;","import React from 'react';\r\nimport { Cards, Chart, CountryPicker } from './components';\r\nimport styles from './App.module.css'\r\nimport { fetchData } from './api';\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n    state = {\r\n        data: {},\r\n        country: '',\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const fetchedData = await fetchData();\r\n        \r\n        this.setState({ data: fetchedData });\r\n    }\r\n\r\n\r\n    render() {\r\n        const { data } = this.state;\r\n\r\n        return (\r\n            <div className={styles.container}>\r\n                <Cards data={data}/>\r\n                <CountryPicker />\r\n                <Chart />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3OgpJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3r88O\"};"],"sourceRoot":""}